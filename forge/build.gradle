plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true

        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfig "weaponleveling-common.mixins.json"
        mixinConfig "weaponleveling.mixins.json"
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    forgeRuntimeLibrary(shadowCommon(annotationProcessor("com.github.LlamaLad7:MixinExtras:${rootProject.mixinextras_version}")))


    modCompileOnly "curse.maven:bettercombat-639842:${rootProject.bettercombat_forge_version}" // Better Combat
    modCompileOnly "curse.maven:clothconfig-348521:${rootProject.clothconfig_forge_version}" // Cloth Config
    modCompileOnly "curse.maven:playeranim-658587:${rootProject.playeranim_forge_version}" // playerAnimator

    modCompileOnly "curse.maven:crayfishgun-289479:${rootProject.cgm_version}" //MrCrayfish's Gun Mod
    modCompileOnly "curse.maven:framework-549225:${rootProject.framework_version}" //Framework
    //modRuntimeOnly
    //modCompileOnly()
    //modImplementation
    modCompileOnly "curse.maven:tinkers-74072:${rootProject.tinkers_version}" //Tinkers
    modCompileOnly "curse.maven:mantle-74924:${rootProject.mantle_version}" //Mantle

    modCompileOnly "curse.maven:parrythis-479996:${rootProject.parrythis_version}" //Parry This!

    modCompileOnly "curse.maven:tetra-289712:${rootProject.tetra_version}" //Tetra
    modCompileOnly "curse.maven:mutil-351914:${rootProject.mutil_version}" //mutil

    //modImplementation "curse.maven:improved-damage-framework-635505:${rootProject.improved_damage_framework_version}" //IDF


    modCompileOnly "curse.maven:epic-fight-mod-405076:${rootProject.epic_fight_version}" // Epic Fight
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
    relocate("com.llamalad7.mixinextras", "net.geradesolukas.mixinextras")
    mergeServiceFiles()
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = "forge"
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-forge-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
